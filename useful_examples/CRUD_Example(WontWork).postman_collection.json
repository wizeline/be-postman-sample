{
	"info": {
		"_postman_id": "f0e0f592-326d-412b-88c7-03ec93b98e1f",
		"name": "CRUD_Example",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4675975-1be3-4cad-8e14-b55e22409cd3",
								"exec": [
									"// handle body response",
									"let jsonResponse = pm.response.json(); ",
									"",
									"// get token from response",
									"let token = jsonResponse.jwt; ",
									"",
									"// if there is token then store it on postman env to use in next request",
									"if(token){",
									"    pm.environment.set(\"valid_token\", \"Bearer \"+token);",
									"}",
									"",
									"// check token is available",
									"pm.test('has a non empty token in body', () => {",
									"    pm.expect(jsonResponse.jwt.length).to.be.gt(1);",
									"});",
									"",
									"// status 200. valid json",
									"eval(globals.isValidResponse)();"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "33fd46ca-56e0-4b34-8b08-e9314a768dc4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"identifier\": \"{{username}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/local",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"local"
							]
						},
						"description": "Login using id and password"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "66a5cc0c-b10f-4cfc-9f64-499c1ab156c4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "30da5983-3e4c-4ec0-a696-552094d1356a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "event",
			"item": [
				{
					"name": "CREATE",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "aea9217d-0422-4067-a9d6-aee5e670e621",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "af644117-5722-4c94-9a9d-da1c104571fc",
								"exec": [
									"let id = pm.response.json().id;",
									"",
									"if(id){",
									"    pm.environment.set(\"id_event\", id);",
									"}",
									"",
									"// status 200. valid json",
									"eval(globals.isValidResponse)();",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{valid_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"eventId\": \"testtest\",\n  \"name\": \"Test event created via API\",\n  \"description\": \"If you see this, please delete this event\",\n  \"additionalInfo\": \"If you see this, please delete this event\",\n  \"url\": \"\",\n  \"info\": \"Test event created via API\",\n  \"pleaseNote\": \"Test event created via API\",\n  \"startDate\": \"2020-10-19\",\n  \"endDate\": \"2020-10-19\",\n  \"status\": \"onsale\",\n  \"timezone\": \"America/Los_Angeles\",\n  \"publicSaleStartDate\": \"2020-01-01\",\n  \"accesibilityInfo\": \"\",\n  \"publicSaleEndDate\": \"2020-10-19\",\n  \"published\": false,\n  \"segment\": \"Sports\",\n  \"genre\": \"Basketball\",\n  \"subGenre\": \"NBA\",\n  \"type\": \"\",\n  \"subType\": \"\",\n  \"family\": false,\n  \"images\": [\n    {\n      \"ratio\": \"16_9\",\n      \"url\":\n        \"https://s1.ticketm.net/dam/a/bdd/779fab35-f530-4af4-a6e0-d4197c140bdd_29271_RETINA_PORTRAIT_16_9.jpg\",\n      \"width\": 640,\n      \"height\": 360,\n      \"fallback\": false\n    },\n    {\n      \"ratio\": \"4_3\",\n      \"url\":\n        \"https://s1.ticketm.net/dam/a/bdd/779fab35-f530-4af4-a6e0-d4197c140bdd_29271_CUSTOM.jpg\",\n      \"width\": 305,\n      \"height\": 225,\n      \"fallback\": false\n    }\n  ],\n  \"presales\": [\n    {\n      \"startDateTime\": \"2020-04-02T17:00:00Z\",\n      \"endDateTime\": \"2020-09-11T00:00:00Z\",\n      \"name\": \"Official Platinum\"\n    },\n    {\n      \"startDateTime\": \"2020-04-02T17:00:00Z\",\n      \"endDateTime\": \"20120209-04-05T05:00:00Z\",\n      \"name\": \"Citi® Cardmember Presale\"\n    },\n    {\n      \"startDateTime\": \"2020-04-05T16:00:00Z\",\n      \"endDateTime\": \"2020-09-11T03:00:00Z\",\n      \"name\": \"Citi® Cardmember Preferred Tickets\"\n    },\n    {\n      \"startDateTime\": \"2020-04-05T16:00:00Z\",\n      \"endDateTime\": \"2020-09-11T03:00:00Z\",\n      \"name\": \"Chase Cardmember Preferred Seating\"\n    }\n  ],\n  \"externalLinks\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/events/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "READ_ALL",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af59d2c6-ba16-4334-9118-95d0a2ea425d",
								"exec": [
									"// status 200. valid json",
									"eval(globals.isValidResponse)();",
									"",
									"//json schema validation",
									"eval(globals.schemaValidation)('['+pm.environment.get(\"schema_event\")+']');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{valid_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/events/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "READ_BY_ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa01c207-ca8f-49fb-b088-aaf4ac491cf6",
								"exec": [
									"// status 200. valid json",
									"eval(globals.isValidResponse)();",
									"",
									"//json schema validation",
									"eval(globals.schemaValidation)(pm.environment.get(\"schema_event\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{valid_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/events/{{id_event}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"{{id_event}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a490d6b-2a63-49e0-a9b2-29fe73cebba7",
								"exec": [
									"let jsonResponse = pm.response.json();",
									"",
									"pm.test('has new values', () => {",
									"  pm.expect(jsonResponse.eventId).to.equal(\"newEventID\");",
									"  pm.expect(jsonResponse.name).to.equal(\"newName\");",
									"  pm.expect(jsonResponse.description).to.equal(\"newDescription\");",
									"  pm.expect(jsonResponse.additionalInfo).to.equal(\"newAddtionalInfo\");",
									"  pm.expect(jsonResponse.url).to.equal(\"newUrl\");",
									"  pm.expect(jsonResponse.info).to.equal(\"newInfo\");",
									"  pm.expect(jsonResponse.pleaseNote).to.equal(\"newPleaseNote\");",
									"  pm.expect(jsonResponse.startDate).to.include(\"2020-07-10\");",
									"  pm.expect(jsonResponse.endDate).to.include(\"2020-07-10\");",
									"  pm.expect(jsonResponse.status).to.equal(\"canceled\");",
									"  pm.expect(jsonResponse.publicSaleStartDate).to.include(\"2020-07-10\");",
									"  pm.expect(jsonResponse.accesibilityInfo).to.equal(\"newAccesibilityInfo\");",
									"  pm.expect(jsonResponse.publicSaleEndDate).to.include(\"2020-07-10\");",
									"  pm.expect(jsonResponse.segment).to.equal(\"newSegment\");",
									"  pm.expect(jsonResponse.genre).to.equal(\"newGenre\");",
									"  pm.expect(jsonResponse.subGenre).to.equal(\"newSubgenre\");",
									"  pm.expect(jsonResponse.type).to.equal(\"newType\");",
									"  pm.expect(jsonResponse.subType).to.equal(\"newSubtype\");",
									"  pm.expect(jsonResponse.family).to.be.false;",
									"  pm.expect(jsonResponse.published).to.be.false;",
									"});",
									"",
									"// status 200. valid json",
									"eval(globals.isValidResponse)();",
									"",
									"//json schema validation",
									"eval(globals.schemaValidation)(pm.environment.get(\"schema_event\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "18d7ecb1-43ea-4357-aa21-5bcb6018c2ae",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{valid_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"eventId\": \"newEventID\",\n    \"name\": \"newName\",\n    \"description\": \"newDescription\",\n    \"additionalInfo\": \"newAddtionalInfo\",\n    \"url\": \"newUrl\",\n    \"info\": \"newInfo\",\n    \"pleaseNote\": \"newPleaseNote\",\n    \"startDate\": \"2020-07-10\",\n    \"endDate\": \"2020-07-10\",\n    \"status\": \"canceled\",\n    \"timezone\": \"null\",\n    \"publicSaleStartDate\": \"2020-07-10\",\n    \"accesibilityInfo\": \"newAccesibilityInfo\",\n    \"publicSaleEndDate\": \"2020-07-10\",\n    \"published\": false,\n    \"segment\": \"newSegment\",\n    \"genre\": \"newGenre\",\n    \"subGenre\": \"newSubgenre\",\n    \"type\": \"newType\",\n    \"subType\": \"newSubtype\",\n    \"family\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/events/{{id_event}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"{{id_event}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2fff5987-52b3-460e-be72-3d99c3855344",
								"exec": [
									"// status 200. valid json",
									"eval(globals.isValidResponse)();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{valid_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/events/{{id_event}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"{{id_event}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3c5a3be8-c5df-40dd-ad33-7aedfa22fb43",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7df7c3ac-9ab6-417d-8d1c-32c18113b200",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}